{"action": "collect", "dag": [{"id": 0, "predecessors": [], "op": "collection_source", "data_ptr": 39929200, "data_size": 10, "output_type": "(long, double, double)", "add_index": false}, {"id": 1, "predecessors": [], "op": "collection_source", "data_ptr": 33519808, "data_size": 1000, "output_type": "(long, double, double)", "add_index": true}, {"id": 2, "predecessors": [0, 1], "op": "cartesian", "output_type": "(long, double, double, long, double, double)"}, {"id": 3, "predecessors": [2], "op": "map", "func": "define void @\"cfuncnotuniquename\"({ { i64, double, double }, { i64, double, double }, double }* nocapture %.1, i64 %.2, double %.3, double %.4, i64 %.5, double %.6, double %.7) local_unnamed_addr #0 {\nentry:\n  %.279.i.i = fsub double %.3, %.6\n  %.292.i.i = fmul double %.279.i.i, %.279.i.i\n  %.304.i.i = fadd double %.292.i.i, 0.000000e+00\n  %.279.1.i.i = fsub double %.4, %.7\n  %.292.1.i.i = fmul double %.279.1.i.i, %.279.1.i.i\n  %.304.1.i.i = fadd double %.304.i.i, %.292.1.i.i\n  %.1.repack.repack18 = bitcast { { i64, double, double }, { i64, double, double }, double }* %.1 to i64*\n  store i64 %.5, i64* %.1.repack.repack18, align 8\n  %.1.repack.repack9 = getelementptr inbounds { { i64, double, double }, { i64, double, double }, double }, { { i64, double, double }, { i64, double, double }, double }* %.1, i64 0, i32 0, i32 1\n  store double %.6, double* %.1.repack.repack9, align 8\n  %.1.repack.repack11 = getelementptr inbounds { { i64, double, double }, { i64, double, double }, double }, { { i64, double, double }, { i64, double, double }, double }* %.1, i64 0, i32 0, i32 2\n  store double %.7, double* %.1.repack.repack11, align 8\n  %.1.repack1.repack = getelementptr inbounds { { i64, double, double }, { i64, double, double }, double }, { { i64, double, double }, { i64, double, double }, double }* %.1, i64 0, i32 1, i32 0\n  store i64 %.2, i64* %.1.repack1.repack, align 8\n  %.1.repack1.repack5 = getelementptr inbounds { { i64, double, double }, { i64, double, double }, double }, { { i64, double, double }, { i64, double, double }, double }* %.1, i64 0, i32 1, i32 1\n  store double %.3, double* %.1.repack1.repack5, align 8\n  %.1.repack1.repack7 = getelementptr inbounds { { i64, double, double }, { i64, double, double }, double }, { { i64, double, double }, { i64, double, double }, double }* %.1, i64 0, i32 1, i32 2\n  store double %.4, double* %.1.repack1.repack7, align 8\n  %.1.repack3 = getelementptr inbounds { { i64, double, double }, { i64, double, double }, double }, { { i64, double, double }, { i64, double, double }, double }* %.1, i64 0, i32 2\n  store double %.304.1.i.i, double* %.1.repack3, align 8\n  ret void\n}\n\n\n", "output_type": "(long, double, double, long, double, double, double)"}, {"id": 4, "predecessors": [3], "op": "reduce_by_key", "func": "define void @\"cfuncnotuniquename\"({ { double, double }, { i64, double, double }, double }* nocapture %.1, double %.2, double %.3, i64 %.4, double %.5, double %.6, double %.7, double %.8, double %.9, i64 %.10, double %.11, double %.12, double %.13) local_unnamed_addr #0 {\nentry:\n  %.245.i = fcmp fast olt double %.13, %.7\n  br i1 %.245.i, label %B72.i, label %\"_ZN2ml6kmeans6KMeans3fit12$3clocals$3e13reduce_1$2485E5TupleI5TupleIddE5TupleIxddEdE5TupleI5TupleIddE5TupleIxddEdE.exit\"\n\nB72.i:                                            ; preds = %entry\n  br label %\"_ZN2ml6kmeans6KMeans3fit12$3clocals$3e13reduce_1$2485E5TupleI5TupleIddE5TupleIxddEdE5TupleI5TupleIddE5TupleIxddEdE.exit\"\n\n\"_ZN2ml6kmeans6KMeans3fit12$3clocals$3e13reduce_1$2485E5TupleI5TupleIddE5TupleIxddEdE5TupleI5TupleIddE5TupleIxddEdE.exit\": ; preds = %entry, %B72.i\n  %.5.sink = phi double [ %.11, %B72.i ], [ %.5, %entry ]\n  %.6.sink = phi double [ %.12, %B72.i ], [ %.6, %entry ]\n  %.7.sink = phi double [ %.13, %B72.i ], [ %.7, %entry ]\n  %.15.sroa.6.0 = phi i64 [ %.10, %B72.i ], [ %.4, %entry ]\n  %0 = bitcast { { double, double }, { i64, double, double }, double }* %.1 to double*\n  store double %.2, double* %0, align 8\n  %.1.repack.repack9 = getelementptr inbounds { { double, double }, { i64, double, double }, double }, { { double, double }, { i64, double, double }, double }* %.1, i64 0, i32 0, i32 1\n  store double %.3, double* %.1.repack.repack9, align 8\n  %.1.repack1.repack = getelementptr inbounds { { double, double }, { i64, double, double }, double }, { { double, double }, { i64, double, double }, double }* %.1, i64 0, i32 1, i32 0\n  store i64 %.15.sroa.6.0, i64* %.1.repack1.repack, align 8\n  %.1.repack1.repack5 = getelementptr inbounds { { double, double }, { i64, double, double }, double }, { { double, double }, { i64, double, double }, double }* %.1, i64 0, i32 1, i32 1\n  store double %.5.sink, double* %.1.repack1.repack5, align 8\n  %.1.repack1.repack7 = getelementptr inbounds { { double, double }, { i64, double, double }, double }, { { double, double }, { i64, double, double }, double }* %.1, i64 0, i32 1, i32 2\n  store double %.6.sink, double* %.1.repack1.repack7, align 8\n  %.1.repack3 = getelementptr inbounds { { double, double }, { i64, double, double }, double }, { { double, double }, { i64, double, double }, double }* %.1, i64 0, i32 2\n  store double %.7.sink, double* %.1.repack3, align 8\n  ret void\n}\n\n\n", "output_type": "(long, double, double, long, double, double, double)"}]}