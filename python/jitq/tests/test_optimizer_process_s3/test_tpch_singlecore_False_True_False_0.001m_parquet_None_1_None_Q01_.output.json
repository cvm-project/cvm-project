{
    "inputs": [
        {
            "dag_port": 0,
            "op": 2,
            "op_port": 0
        },
        {
            "dag_port": 1,
            "op": 1,
            "op_port": 0
        }
    ],
    "operators": [
        {
            "id": 0,
            "inner_dag": {
                "inputs": [
                    {
                        "dag_port": 0,
                        "op": 12,
                        "op_port": 0
                    },
                    {
                        "dag_port": 1,
                        "op": 14,
                        "op_port": 0
                    }
                ],
                "operators": [
                    {
                        "id": 0,
                        "num_inputs": 1,
                        "op": "zip",
                        "output_type": [
                            {
                                "type": "std::string"
                            }
                        ],
                        "predecessors": [
                            {
                                "op": 14,
                                "port": 0
                            }
                        ]
                    },
                    {
                        "id": 1,
                        "op": "ensure_single_tuple",
                        "output_type": [
                            {
                                "layout": "C",
                                "num_dimensions": 1,
                                "tuple_type": [
                                    {
                                        "type": "long"
                                    },
                                    {
                                        "type": "long"
                                    },
                                    {
                                        "type": "long"
                                    },
                                    {
                                        "type": "long"
                                    },
                                    {
                                        "type": "long"
                                    },
                                    {
                                        "type": "long"
                                    },
                                    {
                                        "type": "double"
                                    },
                                    {
                                        "type": "double"
                                    },
                                    {
                                        "type": "double"
                                    },
                                    {
                                        "type": "long"
                                    }
                                ],
                                "type": "array"
                            }
                        ],
                        "predecessors": [
                            {
                                "op": 2,
                                "port": 0
                            }
                        ]
                    },
                    {
                        "id": 2,
                        "op": "materialize_row_vector",
                        "output_type": [
                            {
                                "layout": "C",
                                "num_dimensions": 1,
                                "tuple_type": [
                                    {
                                        "type": "long"
                                    },
                                    {
                                        "type": "long"
                                    },
                                    {
                                        "type": "long"
                                    },
                                    {
                                        "type": "long"
                                    },
                                    {
                                        "type": "long"
                                    },
                                    {
                                        "type": "long"
                                    },
                                    {
                                        "type": "double"
                                    },
                                    {
                                        "type": "double"
                                    },
                                    {
                                        "type": "double"
                                    },
                                    {
                                        "type": "long"
                                    }
                                ],
                                "type": "array"
                            }
                        ],
                        "predecessors": [
                            {
                                "op": 3,
                                "port": 0
                            }
                        ]
                    },
                    {
                        "func": "; ModuleID = 'id'\nsource_filename = \"<string>\"\ntarget datalayout = \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\n@\"_ZN08NumbaEnv4jitq5tests4tpch7queries3Q013run12$3clocals$3e17$3clambda$3e$2410E83Record$28int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$29\" = common local_unnamed_addr global i8* null\n@.const.picklebuf.9671d5790635c75b6a5ae33194300790fc7eb85db0bf48800dbcfa13ea73a21f = internal constant { i8*, i32 } { i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.const.pickledata.d209c67b55a867fd3f2b84e6d6e889530bedaf914192356457488cd68c61bd61, i32 0, i32 0), i32 69 }\n@.const.pickledata.d209c67b55a867fd3f2b84e6d6e889530bedaf914192356457488cd68c61bd61 = internal constant [69 x i8] c\"\\80\\04\\95:\\00\\00\\00\\00\\00\\00\\00\\8C\\08builtins\\94\\8C\\11ZeroDivisionError\\94\\93\\94\\8C\\10division by zero\\94\\85\\94N\\87\\94.\"\n\n; Function Attrs: norecurse nounwind writeonly\ndefine i32 @notuniquename218303dba31a092a63fd8a50e54f2c15({ i64, i64, i64, i64, i64, i64, double, double, double, i64 }* noalias nocapture %retptr, { i8*, i32 }** noalias nocapture %excinfo, i64 %arg.r.0, i64 %arg.r.1, i64 %arg.r.2, i64 %arg.r.3, i64 %arg.r.4, i64 %arg.r.5, i64 %arg.r.6) local_unnamed_addr #0 {\nentry:\n  %.83 = sitofp i64 %arg.r.6 to double\n  %.84 = icmp eq i64 %arg.r.6, 0\n  br i1 %.84, label %B0.if, label %B0.endif, !prof !0\n\nB0.if:                                            ; preds = %entry\n  store { i8*, i32 }* @.const.picklebuf.9671d5790635c75b6a5ae33194300790fc7eb85db0bf48800dbcfa13ea73a21f, { i8*, i32 }** %excinfo, align 8\n  ret i32 1\n\nB0.endif:                                         ; preds = %entry\n  %.42 = and i64 %arg.r.0, 1\n  %.24 = ashr i64 %arg.r.0, 1\n  %.82 = sitofp i64 %arg.r.1 to double\n  %.93 = fdiv fast double %.82, %.83\n  %.142 = sitofp i64 %arg.r.5 to double\n  %.113 = sitofp i64 %arg.r.2 to double\n  %.122 = fdiv fast double %.113, %.83\n  %.151 = fdiv fast double %.142, %.83\n  %retptr.repack19 = bitcast { i64, i64, i64, i64, i64, i64, double, double, double, i64 }* %retptr to i64*\n  store i64 %.24, i64* %retptr.repack19, align 8\n  %retptr.repack1 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, double, double, double, i64 }, { i64, i64, i64, i64, i64, i64, double, double, double, i64 }* %retptr, i64 0, i32 1\n  store i64 %.42, i64* %retptr.repack1, align 8\n  %retptr.repack3 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, double, double, double, i64 }, { i64, i64, i64, i64, i64, i64, double, double, double, i64 }* %retptr, i64 0, i32 2\n  store i64 %arg.r.1, i64* %retptr.repack3, align 8\n  %retptr.repack5 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, double, double, double, i64 }, { i64, i64, i64, i64, i64, i64, double, double, double, i64 }* %retptr, i64 0, i32 3\n  store i64 %arg.r.2, i64* %retptr.repack5, align 8\n  %retptr.repack7 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, double, double, double, i64 }, { i64, i64, i64, i64, i64, i64, double, double, double, i64 }* %retptr, i64 0, i32 4\n  store i64 %arg.r.3, i64* %retptr.repack7, align 8\n  %retptr.repack9 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, double, double, double, i64 }, { i64, i64, i64, i64, i64, i64, double, double, double, i64 }* %retptr, i64 0, i32 5\n  store i64 %arg.r.4, i64* %retptr.repack9, align 8\n  %retptr.repack11 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, double, double, double, i64 }, { i64, i64, i64, i64, i64, i64, double, double, double, i64 }* %retptr, i64 0, i32 6\n  store double %.93, double* %retptr.repack11, align 8\n  %retptr.repack13 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, double, double, double, i64 }, { i64, i64, i64, i64, i64, i64, double, double, double, i64 }* %retptr, i64 0, i32 7\n  store double %.122, double* %retptr.repack13, align 8\n  %retptr.repack15 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, double, double, double, i64 }, { i64, i64, i64, i64, i64, i64, double, double, double, i64 }* %retptr, i64 0, i32 8\n  store double %.151, double* %retptr.repack15, align 8\n  %retptr.repack17 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, double, double, double, i64 }, { i64, i64, i64, i64, i64, i64, double, double, double, i64 }* %retptr, i64 0, i32 9\n  store i64 %arg.r.6, i64* %retptr.repack17, align 8\n  ret i32 0\n}\n\n; Function Attrs: alwaysinline norecurse nounwind writeonly\ndefine void @cfunc.notuniquename218303dba31a092a63fd8a50e54f2c15(<{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>* nocapture %.1, i64 %.2, i64 %.3, i64 %.4, i64 %.5, i64 %.6, i64 %.7, i64 %.8) local_unnamed_addr #1 {\nentry:\n  %.83.i = sitofp i64 %.8 to double\n  %.84.i = icmp eq i64 %.8, 0\n  br i1 %.84.i, label %notuniquename218303dba31a092a63fd8a50e54f2c15.exit, label %B0.endif.i, !prof !0\n\nB0.endif.i:                                       ; preds = %entry\n  %.42.i = and i64 %.2, 1\n  %.24.i = ashr i64 %.2, 1\n  %.82.i = sitofp i64 %.3 to double\n  %.93.i = fdiv fast double %.82.i, %.83.i\n  %.142.i = sitofp i64 %.7 to double\n  %.113.i = sitofp i64 %.4 to double\n  %.122.i = fdiv fast double %.113.i, %.83.i\n  %.151.i = fdiv fast double %.142.i, %.83.i\n  %0 = bitcast double %.93.i to i64\n  %1 = bitcast double %.122.i to i64\n  %2 = bitcast double %.151.i to i64\n  br label %notuniquename218303dba31a092a63fd8a50e54f2c15.exit\n\nnotuniquename218303dba31a092a63fd8a50e54f2c15.exit: ; preds = %B0.endif.i, %entry\n  %.10.sroa.32.0 = phi i64 [ %2, %B0.endif.i ], [ 0, %entry ]\n  %.10.sroa.28.0 = phi i64 [ %1, %B0.endif.i ], [ 0, %entry ]\n  %.10.sroa.24.0 = phi i64 [ %0, %B0.endif.i ], [ 0, %entry ]\n  %.10.sroa.20.0 = phi i64 [ %.6, %B0.endif.i ], [ 0, %entry ]\n  %.10.sroa.16.0 = phi i64 [ %.5, %B0.endif.i ], [ 0, %entry ]\n  %.10.sroa.12.0 = phi i64 [ %.4, %B0.endif.i ], [ 0, %entry ]\n  %.10.sroa.8.0 = phi i64 [ %.3, %B0.endif.i ], [ 0, %entry ]\n  %.10.sroa.4.0 = phi i64 [ %.42.i, %B0.endif.i ], [ 0, %entry ]\n  %.10.sroa.0.0 = phi i64 [ %.24.i, %B0.endif.i ], [ 0, %entry ]\n  %.1.repack22 = bitcast <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>* %.1 to i64*\n  store i64 %.10.sroa.0.0, i64* %.1.repack22, align 1\n  %.1.repack1 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>, <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>* %.1, i64 0, i32 1\n  store i64 %.10.sroa.4.0, i64* %.1.repack1, align 1\n  %.1.repack3 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>, <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>* %.1, i64 0, i32 2\n  store i64 %.10.sroa.8.0, i64* %.1.repack3, align 1\n  %.1.repack5 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>, <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>* %.1, i64 0, i32 3\n  store i64 %.10.sroa.12.0, i64* %.1.repack5, align 1\n  %.1.repack7 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>, <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>* %.1, i64 0, i32 4\n  store i64 %.10.sroa.16.0, i64* %.1.repack7, align 1\n  %.1.repack9 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>, <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>* %.1, i64 0, i32 5\n  store i64 %.10.sroa.20.0, i64* %.1.repack9, align 1\n  %.1.repack11 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>, <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>* %.1, i64 0, i32 6\n  %3 = bitcast double* %.1.repack11 to i64*\n  store i64 %.10.sroa.24.0, i64* %3, align 1\n  %.1.repack13 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>, <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>* %.1, i64 0, i32 7\n  %4 = bitcast double* %.1.repack13 to i64*\n  store i64 %.10.sroa.28.0, i64* %4, align 1\n  %.1.repack15 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>, <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>* %.1, i64 0, i32 8\n  %5 = bitcast double* %.1.repack15 to i64*\n  store i64 %.10.sroa.32.0, i64* %5, align 1\n  %.1.repack17 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>, <{ i64, i64, i64, i64, i64, i64, double, double, double, i64 }>* %.1, i64 0, i32 9\n  store i64 %.8, i64* %.1.repack17, align 1\n  ret void\n}\n\nattributes #0 = { norecurse nounwind writeonly }\nattributes #1 = { alwaysinline norecurse nounwind writeonly }\n\n!0 = !{!\"branch_weights\", i32 1, i32 99}\n",
                        "id": 3,
                        "op": "map",
                        "output_type": [
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "double"
                            },
                            {
                                "type": "double"
                            },
                            {
                                "type": "double"
                            },
                            {
                                "type": "long"
                            }
                        ],
                        "predecessors": [
                            {
                                "op": 4,
                                "port": 0
                            }
                        ]
                    },
                    {
                        "id": 4,
                        "op": "sort",
                        "output_type": [
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            }
                        ],
                        "predecessors": [
                            {
                                "op": 5,
                                "port": 0
                            }
                        ]
                    },
                    {
                        "func": "; ModuleID = 'id'\nsource_filename = \"<string>\"\ntarget datalayout = \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\n@\"_ZN08NumbaEnv4jitq5tests4tpch7queries3Q013run12$3clocals$3e16$3clambda$3e$248E72Record$28int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$2972Record$28int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$29\" = common local_unnamed_addr global i8* null\n\n; Function Attrs: norecurse nounwind writeonly\ndefine i32 @notuniquename218303dba31a092a63fd8a50e54f2c15({ i64, i64, i64, i64, i64, i64 }* noalias nocapture %retptr, { i8*, i32 }** noalias nocapture readnone %excinfo, i64 %arg.r1.0, i64 %arg.r1.1, i64 %arg.r1.2, i64 %arg.r1.3, i64 %arg.r1.4, i64 %arg.r1.5, i64 %arg.r2.0, i64 %arg.r2.1, i64 %arg.r2.2, i64 %arg.r2.3, i64 %arg.r2.4, i64 %arg.r2.5) local_unnamed_addr #0 {\nentry:\n  %.34 = add nsw i64 %arg.r2.0, %arg.r1.0\n  %.54 = add nsw i64 %arg.r2.1, %arg.r1.1\n  %.74 = add nsw i64 %arg.r2.2, %arg.r1.2\n  %.94 = add nsw i64 %arg.r2.3, %arg.r1.3\n  %.114 = add nsw i64 %arg.r2.4, %arg.r1.4\n  %.138 = add nsw i64 %arg.r2.5, %arg.r1.5\n  %retptr.repack11 = bitcast { i64, i64, i64, i64, i64, i64 }* %retptr to i64*\n  store i64 %.34, i64* %retptr.repack11, align 8\n  %retptr.repack1 = getelementptr inbounds { i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 1\n  store i64 %.54, i64* %retptr.repack1, align 8\n  %retptr.repack3 = getelementptr inbounds { i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 2\n  store i64 %.74, i64* %retptr.repack3, align 8\n  %retptr.repack5 = getelementptr inbounds { i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 3\n  store i64 %.94, i64* %retptr.repack5, align 8\n  %retptr.repack7 = getelementptr inbounds { i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 4\n  store i64 %.114, i64* %retptr.repack7, align 8\n  %retptr.repack9 = getelementptr inbounds { i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 5\n  store i64 %.138, i64* %retptr.repack9, align 8\n  ret i32 0\n}\n\n; Function Attrs: alwaysinline norecurse nounwind writeonly\ndefine void @cfunc.notuniquename218303dba31a092a63fd8a50e54f2c15(<{ i64, i64, i64, i64, i64, i64 }>* nocapture %.1, i64 %.2, i64 %.3, i64 %.4, i64 %.5, i64 %.6, i64 %.7, i64 %.8, i64 %.9, i64 %.10, i64 %.11, i64 %.12, i64 %.13) local_unnamed_addr #1 {\nentry:\n  %.34.i = add nsw i64 %.8, %.2\n  %.54.i = add nsw i64 %.9, %.3\n  %.74.i = add nsw i64 %.10, %.4\n  %.94.i = add nsw i64 %.11, %.5\n  %.114.i = add nsw i64 %.12, %.6\n  %.138.i = add nsw i64 %.13, %.7\n  %.1.repack11 = bitcast <{ i64, i64, i64, i64, i64, i64 }>* %.1 to i64*\n  store i64 %.34.i, i64* %.1.repack11, align 1\n  %.1.repack1 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 1\n  store i64 %.54.i, i64* %.1.repack1, align 1\n  %.1.repack3 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 2\n  store i64 %.74.i, i64* %.1.repack3, align 1\n  %.1.repack5 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 3\n  store i64 %.94.i, i64* %.1.repack5, align 1\n  %.1.repack7 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 4\n  store i64 %.114.i, i64* %.1.repack7, align 1\n  %.1.repack9 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 5\n  store i64 %.138.i, i64* %.1.repack9, align 1\n  ret void\n}\n\nattributes #0 = { norecurse nounwind writeonly }\nattributes #1 = { alwaysinline norecurse nounwind writeonly }\n",
                        "id": 5,
                        "op": "reduce_by_key",
                        "output_type": [
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            }
                        ],
                        "predecessors": [
                            {
                                "op": 6,
                                "port": 0
                            }
                        ]
                    },
                    {
                        "add_index": false,
                        "id": 6,
                        "op": "column_scan",
                        "output_type": [
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            }
                        ],
                        "predecessors": [
                            {
                                "op": 7,
                                "port": 0
                            }
                        ]
                    },
                    {
                        "columns": [
                            {
                                "idx": 0,
                                "ranges": []
                            },
                            {
                                "idx": 1,
                                "ranges": []
                            },
                            {
                                "idx": 2,
                                "ranges": []
                            },
                            {
                                "idx": 3,
                                "ranges": []
                            },
                            {
                                "idx": 4,
                                "ranges": []
                            },
                            {
                                "idx": 5,
                                "ranges": []
                            },
                            {
                                "idx": 6,
                                "ranges": []
                            }
                        ],
                        "filesystem": "file",
                        "id": 7,
                        "op": "parquet_scan",
                        "output_type": [
                            {
                                "layout": "C",
                                "num_dimensions": 1,
                                "tuple_type": [
                                    {
                                        "type": "long"
                                    }
                                ],
                                "type": "array"
                            },
                            {
                                "layout": "C",
                                "num_dimensions": 1,
                                "tuple_type": [
                                    {
                                        "type": "long"
                                    }
                                ],
                                "type": "array"
                            },
                            {
                                "layout": "C",
                                "num_dimensions": 1,
                                "tuple_type": [
                                    {
                                        "type": "long"
                                    }
                                ],
                                "type": "array"
                            },
                            {
                                "layout": "C",
                                "num_dimensions": 1,
                                "tuple_type": [
                                    {
                                        "type": "long"
                                    }
                                ],
                                "type": "array"
                            },
                            {
                                "layout": "C",
                                "num_dimensions": 1,
                                "tuple_type": [
                                    {
                                        "type": "long"
                                    }
                                ],
                                "type": "array"
                            },
                            {
                                "layout": "C",
                                "num_dimensions": 1,
                                "tuple_type": [
                                    {
                                        "type": "long"
                                    }
                                ],
                                "type": "array"
                            },
                            {
                                "layout": "C",
                                "num_dimensions": 1,
                                "tuple_type": [
                                    {
                                        "type": "long"
                                    }
                                ],
                                "type": "array"
                            }
                        ],
                        "predecessors": [
                            {
                                "op": 8,
                                "port": 0
                            }
                        ]
                    },
                    {
                        "id": 8,
                        "inner_dag": {
                            "inputs": [
                                {
                                    "dag_port": 0,
                                    "op": 1,
                                    "op_port": 0
                                },
                                {
                                    "dag_port": 0,
                                    "op": 2,
                                    "op_port": 0
                                }
                            ],
                            "operators": [
                                {
                                    "id": 0,
                                    "inner_dag": {
                                        "inputs": [
                                            {
                                                "dag_port": 0,
                                                "op": 14,
                                                "op_port": 0
                                            },
                                            {
                                                "dag_port": 1,
                                                "op": 15,
                                                "op_port": 0
                                            }
                                        ],
                                        "operators": [
                                            {
                                                "id": 0,
                                                "op": "expand_pattern",
                                                "output_type": [
                                                    {
                                                        "type": "std::string"
                                                    }
                                                ],
                                                "predecessors": [
                                                    {
                                                        "op": 2,
                                                        "port": 0
                                                    },
                                                    {
                                                        "op": 1,
                                                        "port": 0
                                                    }
                                                ]
                                            },
                                            {
                                                "id": 1,
                                                "op": "range_source",
                                                "output_type": [
                                                    {
                                                        "type": "long"
                                                    }
                                                ],
                                                "predecessors": [
                                                    {
                                                        "op": 3,
                                                        "port": 0
                                                    }
                                                ]
                                            },
                                            {
                                                "id": 2,
                                                "op": "projection",
                                                "output_type": [
                                                    {
                                                        "type": "std::string"
                                                    }
                                                ],
                                                "positions": [
                                                    3
                                                ],
                                                "predecessors": [
                                                    {
                                                        "op": 14,
                                                        "port": 0
                                                    }
                                                ]
                                            },
                                            {
                                                "id": 3,
                                                "op": "projection",
                                                "output_type": [
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    }
                                                ],
                                                "positions": [
                                                    0,
                                                    1,
                                                    2
                                                ],
                                                "predecessors": [
                                                    {
                                                        "op": 15,
                                                        "port": 0
                                                    }
                                                ]
                                            },
                                            {
                                                "id": 4,
                                                "op": "materialize_column_chunks",
                                                "output_type": [
                                                    {
                                                        "layout": "C",
                                                        "num_dimensions": 1,
                                                        "tuple_type": [
                                                            {
                                                                "type": "long"
                                                            }
                                                        ],
                                                        "type": "array"
                                                    },
                                                    {
                                                        "layout": "C",
                                                        "num_dimensions": 1,
                                                        "tuple_type": [
                                                            {
                                                                "type": "long"
                                                            }
                                                        ],
                                                        "type": "array"
                                                    },
                                                    {
                                                        "layout": "C",
                                                        "num_dimensions": 1,
                                                        "tuple_type": [
                                                            {
                                                                "type": "long"
                                                            }
                                                        ],
                                                        "type": "array"
                                                    },
                                                    {
                                                        "layout": "C",
                                                        "num_dimensions": 1,
                                                        "tuple_type": [
                                                            {
                                                                "type": "long"
                                                            }
                                                        ],
                                                        "type": "array"
                                                    },
                                                    {
                                                        "layout": "C",
                                                        "num_dimensions": 1,
                                                        "tuple_type": [
                                                            {
                                                                "type": "long"
                                                            }
                                                        ],
                                                        "type": "array"
                                                    },
                                                    {
                                                        "layout": "C",
                                                        "num_dimensions": 1,
                                                        "tuple_type": [
                                                            {
                                                                "type": "long"
                                                            }
                                                        ],
                                                        "type": "array"
                                                    },
                                                    {
                                                        "layout": "C",
                                                        "num_dimensions": 1,
                                                        "tuple_type": [
                                                            {
                                                                "type": "long"
                                                            }
                                                        ],
                                                        "type": "array"
                                                    }
                                                ],
                                                "predecessors": [
                                                    {
                                                        "op": 5,
                                                        "port": 0
                                                    }
                                                ]
                                            },
                                            {
                                                "func": "; ModuleID = 'id'\nsource_filename = \"<string>\"\ntarget datalayout = \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\n@\"_ZN08NumbaEnv4jitq5tests4tpch7queries3Q013run12$3clocals$3e16$3clambda$3e$248E72Record$28int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$2972Record$28int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$29\" = common local_unnamed_addr global i8* null\n\n; Function Attrs: norecurse nounwind writeonly\ndefine i32 @notuniquename218303dba31a092a63fd8a50e54f2c15({ i64, i64, i64, i64, i64, i64 }* noalias nocapture %retptr, { i8*, i32 }** noalias nocapture readnone %excinfo, i64 %arg.r1.0, i64 %arg.r1.1, i64 %arg.r1.2, i64 %arg.r1.3, i64 %arg.r1.4, i64 %arg.r1.5, i64 %arg.r2.0, i64 %arg.r2.1, i64 %arg.r2.2, i64 %arg.r2.3, i64 %arg.r2.4, i64 %arg.r2.5) local_unnamed_addr #0 {\nentry:\n  %.34 = add nsw i64 %arg.r2.0, %arg.r1.0\n  %.54 = add nsw i64 %arg.r2.1, %arg.r1.1\n  %.74 = add nsw i64 %arg.r2.2, %arg.r1.2\n  %.94 = add nsw i64 %arg.r2.3, %arg.r1.3\n  %.114 = add nsw i64 %arg.r2.4, %arg.r1.4\n  %.138 = add nsw i64 %arg.r2.5, %arg.r1.5\n  %retptr.repack11 = bitcast { i64, i64, i64, i64, i64, i64 }* %retptr to i64*\n  store i64 %.34, i64* %retptr.repack11, align 8\n  %retptr.repack1 = getelementptr inbounds { i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 1\n  store i64 %.54, i64* %retptr.repack1, align 8\n  %retptr.repack3 = getelementptr inbounds { i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 2\n  store i64 %.74, i64* %retptr.repack3, align 8\n  %retptr.repack5 = getelementptr inbounds { i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 3\n  store i64 %.94, i64* %retptr.repack5, align 8\n  %retptr.repack7 = getelementptr inbounds { i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 4\n  store i64 %.114, i64* %retptr.repack7, align 8\n  %retptr.repack9 = getelementptr inbounds { i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 5\n  store i64 %.138, i64* %retptr.repack9, align 8\n  ret i32 0\n}\n\n; Function Attrs: alwaysinline norecurse nounwind writeonly\ndefine void @cfunc.notuniquename218303dba31a092a63fd8a50e54f2c15(<{ i64, i64, i64, i64, i64, i64 }>* nocapture %.1, i64 %.2, i64 %.3, i64 %.4, i64 %.5, i64 %.6, i64 %.7, i64 %.8, i64 %.9, i64 %.10, i64 %.11, i64 %.12, i64 %.13) local_unnamed_addr #1 {\nentry:\n  %.34.i = add nsw i64 %.8, %.2\n  %.54.i = add nsw i64 %.9, %.3\n  %.74.i = add nsw i64 %.10, %.4\n  %.94.i = add nsw i64 %.11, %.5\n  %.114.i = add nsw i64 %.12, %.6\n  %.138.i = add nsw i64 %.13, %.7\n  %.1.repack11 = bitcast <{ i64, i64, i64, i64, i64, i64 }>* %.1 to i64*\n  store i64 %.34.i, i64* %.1.repack11, align 1\n  %.1.repack1 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 1\n  store i64 %.54.i, i64* %.1.repack1, align 1\n  %.1.repack3 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 2\n  store i64 %.74.i, i64* %.1.repack3, align 1\n  %.1.repack5 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 3\n  store i64 %.94.i, i64* %.1.repack5, align 1\n  %.1.repack7 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 4\n  store i64 %.114.i, i64* %.1.repack7, align 1\n  %.1.repack9 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 5\n  store i64 %.138.i, i64* %.1.repack9, align 1\n  ret void\n}\n\nattributes #0 = { norecurse nounwind writeonly }\nattributes #1 = { alwaysinline norecurse nounwind writeonly }\n",
                                                "id": 5,
                                                "op": "reduce_by_key",
                                                "output_type": [
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    }
                                                ],
                                                "predecessors": [
                                                    {
                                                        "op": 6,
                                                        "port": 0
                                                    }
                                                ]
                                            },
                                            {
                                                "func": "; ModuleID = 'id'\nsource_filename = \"<string>\"\ntarget datalayout = \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\n@\"_ZN08NumbaEnv4jitq5tests4tpch7queries3Q013run12$3clocals$3e16$3clambda$3e$246E83Record$28int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$29\" = common local_unnamed_addr global i8* null\n\n; Function Attrs: norecurse nounwind writeonly\ndefine i32 @notuniquename218303dba31a092a63fd8a50e54f2c15({ i64, i64, i64, i64, i64, i64, i64 }* noalias nocapture %retptr, { i8*, i32 }** noalias nocapture readnone %excinfo, i64 %arg.r.0, i64 %arg.r.1, i64 %arg.r.2, i64 %arg.r.3, i64 %arg.r.4, i64 %arg.r.5, i64 %arg.r.6) local_unnamed_addr #0 {\nentry:\n  %.24 = shl i64 %arg.r.4, 1\n  %.39 = add nsw i64 %.24, %arg.r.5\n  %.106 = sub nsw i64 100, %arg.r.2\n  %.116 = mul nsw i64 %.106, %arg.r.1\n  %.167 = add nsw i64 %arg.r.3, 100\n  %.177 = mul nsw i64 %.116, %.167\n  %retptr.repack13 = bitcast { i64, i64, i64, i64, i64, i64, i64 }* %retptr to i64*\n  store i64 %.39, i64* %retptr.repack13, align 8\n  %retptr.repack1 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 1\n  store i64 %arg.r.0, i64* %retptr.repack1, align 8\n  %retptr.repack3 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 2\n  store i64 %arg.r.1, i64* %retptr.repack3, align 8\n  %retptr.repack5 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 3\n  store i64 %.116, i64* %retptr.repack5, align 8\n  %retptr.repack7 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 4\n  store i64 %.177, i64* %retptr.repack7, align 8\n  %retptr.repack9 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 5\n  store i64 %arg.r.2, i64* %retptr.repack9, align 8\n  %retptr.repack11 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 6\n  store i64 1, i64* %retptr.repack11, align 8\n  ret i32 0\n}\n\n; Function Attrs: alwaysinline norecurse nounwind writeonly\ndefine void @cfunc.notuniquename218303dba31a092a63fd8a50e54f2c15(<{ i64, i64, i64, i64, i64, i64, i64 }>* nocapture %.1, i64 %.2, i64 %.3, i64 %.4, i64 %.5, i64 %.6, i64 %.7, i64 %.8) local_unnamed_addr #1 {\nentry:\n  %.24.i = shl i64 %.6, 1\n  %.39.i = add nsw i64 %.24.i, %.7\n  %.106.i = sub nsw i64 100, %.4\n  %.116.i = mul nsw i64 %.106.i, %.3\n  %.167.i = add nsw i64 %.5, 100\n  %.177.i = mul nsw i64 %.116.i, %.167.i\n  %.1.repack13 = bitcast <{ i64, i64, i64, i64, i64, i64, i64 }>* %.1 to i64*\n  store i64 %.39.i, i64* %.1.repack13, align 1\n  %.1.repack1 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 1\n  store i64 %.2, i64* %.1.repack1, align 1\n  %.1.repack3 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 2\n  store i64 %.3, i64* %.1.repack3, align 1\n  %.1.repack5 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 3\n  store i64 %.116.i, i64* %.1.repack5, align 1\n  %.1.repack7 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 4\n  store i64 %.177.i, i64* %.1.repack7, align 1\n  %.1.repack9 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 5\n  store i64 %.4, i64* %.1.repack9, align 1\n  %.1.repack11 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 6\n  store i64 1, i64* %.1.repack11, align 1\n  ret void\n}\n\nattributes #0 = { norecurse nounwind writeonly }\nattributes #1 = { alwaysinline norecurse nounwind writeonly }\n",
                                                "id": 6,
                                                "op": "map",
                                                "output_type": [
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    }
                                                ],
                                                "predecessors": [
                                                    {
                                                        "op": 7,
                                                        "port": 0
                                                    }
                                                ]
                                            },
                                            {
                                                "func": "; ModuleID = 'id'\nsource_filename = \"<string>\"\ntarget datalayout = \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\n@\"_ZN08NumbaEnv4jitq3rdd3RDD5alias12$3clocals$3e16$3clambda$3e$242E5TupleIxxxxxxxE\" = common local_unnamed_addr global i8* null\n\n; Function Attrs: norecurse nounwind writeonly\ndefine i32 @notuniquename218303dba31a092a63fd8a50e54f2c15({ i64, i64, i64, i64, i64, i64, i64 }* noalias nocapture %retptr, { i8*, i32 }** noalias nocapture readnone %excinfo, i64 %arg.x.0, i64 %arg.x.1, i64 %arg.x.2, i64 %arg.x.3, i64 %arg.x.4, i64 %arg.x.5, i64 %arg.x.6) local_unnamed_addr #0 {\nentry:\n  %retptr.repack13 = bitcast { i64, i64, i64, i64, i64, i64, i64 }* %retptr to i64*\n  store i64 %arg.x.0, i64* %retptr.repack13, align 8\n  %retptr.repack1 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 1\n  store i64 %arg.x.1, i64* %retptr.repack1, align 8\n  %retptr.repack3 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 2\n  store i64 %arg.x.2, i64* %retptr.repack3, align 8\n  %retptr.repack5 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 3\n  store i64 %arg.x.3, i64* %retptr.repack5, align 8\n  %retptr.repack7 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 4\n  store i64 %arg.x.4, i64* %retptr.repack7, align 8\n  %retptr.repack9 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 5\n  store i64 %arg.x.5, i64* %retptr.repack9, align 8\n  %retptr.repack11 = getelementptr inbounds { i64, i64, i64, i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64, i64 }* %retptr, i64 0, i32 6\n  store i64 %arg.x.6, i64* %retptr.repack11, align 8\n  ret i32 0\n}\n\n; Function Attrs: alwaysinline norecurse nounwind writeonly\ndefine void @cfunc.notuniquename218303dba31a092a63fd8a50e54f2c15(<{ i64, i64, i64, i64, i64, i64, i64 }>* nocapture %.1, i64 %.2, i64 %.3, i64 %.4, i64 %.5, i64 %.6, i64 %.7, i64 %.8) local_unnamed_addr #1 {\nentry:\n  %.1.repack13 = bitcast <{ i64, i64, i64, i64, i64, i64, i64 }>* %.1 to i64*\n  store i64 %.2, i64* %.1.repack13, align 1\n  %.1.repack1 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 1\n  store i64 %.3, i64* %.1.repack1, align 1\n  %.1.repack3 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 2\n  store i64 %.4, i64* %.1.repack3, align 1\n  %.1.repack5 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 3\n  store i64 %.5, i64* %.1.repack5, align 1\n  %.1.repack7 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 4\n  store i64 %.6, i64* %.1.repack7, align 1\n  %.1.repack9 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 5\n  store i64 %.7, i64* %.1.repack9, align 1\n  %.1.repack11 = getelementptr inbounds <{ i64, i64, i64, i64, i64, i64, i64 }>, <{ i64, i64, i64, i64, i64, i64, i64 }>* %.1, i64 0, i32 6\n  store i64 %.8, i64* %.1.repack11, align 1\n  ret void\n}\n\nattributes #0 = { norecurse nounwind writeonly }\nattributes #1 = { alwaysinline norecurse nounwind writeonly }\n",
                                                "id": 7,
                                                "op": "map",
                                                "output_type": [
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    }
                                                ],
                                                "predecessors": [
                                                    {
                                                        "op": 8,
                                                        "port": 0
                                                    }
                                                ]
                                            },
                                            {
                                                "func": "; ModuleID = 'id'\nsource_filename = \"<string>\"\ntarget datalayout = \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\n@\"_ZN08NumbaEnv4jitq5tests4tpch7queries3Q013run12$3clocals$3e16$3clambda$3e$244E83Record$28int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$2c$20int64$29\" = common local_unnamed_addr global i8* null\n\n; Function Attrs: norecurse nounwind writeonly\ndefine i32 @notuniquename218303dba31a092a63fd8a50e54f2c15(i8* noalias nocapture %retptr, { i8*, i32 }** noalias nocapture readnone %excinfo, i64 %arg.r.0, i64 %arg.r.1, i64 %arg.r.2, i64 %arg.r.3, i64 %arg.r.4, i64 %arg.r.5, i64 %arg.r.6) local_unnamed_addr #0 {\nentry:\n  %.26 = icmp slt i64 %arg.r.6, 904694401\n  %.41 = zext i1 %.26 to i8\n  store i8 %.41, i8* %retptr, align 1\n  ret i32 0\n}\n\n; Function Attrs: alwaysinline\ndefine void @cfunc.notuniquename218303dba31a092a63fd8a50e54f2c15(i8* %.1, i64 %.2, i64 %.3, i64 %.4, i64 %.5, i64 %.6, i64 %.7, i64 %.8) #1 {\nentry:\n  %.26.i = icmp slt i64 %.8, 904694401\n  %.34 = bitcast i8* %.1 to i1*\n  store i1 %.26.i, i1* %.34, align 1\n  ret void\n}\n\nattributes #0 = { norecurse nounwind writeonly }\nattributes #1 = { alwaysinline }\n",
                                                "id": 8,
                                                "op": "filter",
                                                "output_type": [
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    }
                                                ],
                                                "predecessors": [
                                                    {
                                                        "op": 9,
                                                        "port": 0
                                                    }
                                                ]
                                            },
                                            {
                                                "add_index": false,
                                                "id": 9,
                                                "op": "column_scan",
                                                "output_type": [
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    }
                                                ],
                                                "predecessors": [
                                                    {
                                                        "op": 10,
                                                        "port": 0
                                                    }
                                                ]
                                            },
                                            {
                                                "columns": [
                                                    {
                                                        "idx": 4,
                                                        "ranges": []
                                                    },
                                                    {
                                                        "idx": 5,
                                                        "ranges": []
                                                    },
                                                    {
                                                        "idx": 6,
                                                        "ranges": []
                                                    },
                                                    {
                                                        "idx": 7,
                                                        "ranges": []
                                                    },
                                                    {
                                                        "idx": 8,
                                                        "ranges": []
                                                    },
                                                    {
                                                        "idx": 9,
                                                        "ranges": []
                                                    },
                                                    {
                                                        "idx": 10,
                                                        "ranges": []
                                                    }
                                                ],
                                                "filesystem": "file",
                                                "id": 10,
                                                "op": "parquet_scan",
                                                "output_type": [
                                                    {
                                                        "layout": "C",
                                                        "num_dimensions": 1,
                                                        "tuple_type": [
                                                            {
                                                                "type": "long"
                                                            }
                                                        ],
                                                        "type": "array"
                                                    },
                                                    {
                                                        "layout": "C",
                                                        "num_dimensions": 1,
                                                        "tuple_type": [
                                                            {
                                                                "type": "long"
                                                            }
                                                        ],
                                                        "type": "array"
                                                    },
                                                    {
                                                        "layout": "C",
                                                        "num_dimensions": 1,
                                                        "tuple_type": [
                                                            {
                                                                "type": "long"
                                                            }
                                                        ],
                                                        "type": "array"
                                                    },
                                                    {
                                                        "layout": "C",
                                                        "num_dimensions": 1,
                                                        "tuple_type": [
                                                            {
                                                                "type": "long"
                                                            }
                                                        ],
                                                        "type": "array"
                                                    },
                                                    {
                                                        "layout": "C",
                                                        "num_dimensions": 1,
                                                        "tuple_type": [
                                                            {
                                                                "type": "long"
                                                            }
                                                        ],
                                                        "type": "array"
                                                    },
                                                    {
                                                        "layout": "C",
                                                        "num_dimensions": 1,
                                                        "tuple_type": [
                                                            {
                                                                "type": "long"
                                                            }
                                                        ],
                                                        "type": "array"
                                                    },
                                                    {
                                                        "layout": "C",
                                                        "num_dimensions": 1,
                                                        "tuple_type": [
                                                            {
                                                                "type": "long"
                                                            }
                                                        ],
                                                        "type": "array"
                                                    }
                                                ],
                                                "predecessors": [
                                                    {
                                                        "op": 12,
                                                        "port": 0
                                                    }
                                                ]
                                            },
                                            {
                                                "column_names": [
                                                    "v0",
                                                    "v1",
                                                    "v2",
                                                    "v3",
                                                    "v4",
                                                    "v5",
                                                    "v6"
                                                ],
                                                "id": 11,
                                                "op": "materialize_parquet_file",
                                                "output_type": [
                                                    {
                                                        "type": "std::string"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    }
                                                ],
                                                "predecessors": [
                                                    {
                                                        "op": 4,
                                                        "port": 0
                                                    },
                                                    {
                                                        "op": 13,
                                                        "port": 0
                                                    }
                                                ]
                                            },
                                            {
                                                "id": 12,
                                                "op": "cartesian",
                                                "output_type": [
                                                    {
                                                        "type": "std::string"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    }
                                                ],
                                                "predecessors": [
                                                    {
                                                        "op": 0,
                                                        "port": 0
                                                    },
                                                    {
                                                        "op": 16,
                                                        "port": 0
                                                    }
                                                ]
                                            },
                                            {
                                                "id": 13,
                                                "op": "expand_pattern",
                                                "output_type": [
                                                    {
                                                        "type": "std::string"
                                                    }
                                                ],
                                                "predecessors": [
                                                    {
                                                        "op": 17,
                                                        "port": 0
                                                    },
                                                    {
                                                        "op": 18,
                                                        "port": 0
                                                    }
                                                ]
                                            },
                                            {
                                                "id": 14,
                                                "op": "parameter_lookup",
                                                "output_type": [
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "std::string"
                                                    }
                                                ],
                                                "predecessors": []
                                            },
                                            {
                                                "id": 15,
                                                "op": "parameter_lookup",
                                                "output_type": [
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "std::string"
                                                    }
                                                ],
                                                "predecessors": []
                                            },
                                            {
                                                "id": 16,
                                                "op": "constant_tuple",
                                                "output_type": [
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    },
                                                    {
                                                        "type": "long"
                                                    }
                                                ],
                                                "predecessors": [],
                                                "values": [
                                                    "0",
                                                    "1",
                                                    "1"
                                                ]
                                            },
                                            {
                                                "id": 17,
                                                "op": "constant_tuple",
                                                "output_type": [
                                                    {
                                                        "type": "std::string"
                                                    }
                                                ],
                                                "predecessors": [],
                                                "values": [
                                                    "R\"STRING(   {       \"filename\" : \"/tmp/jitq-query-result-%1$d.parquet\",       \"filesystem\" : \"file\"   })STRING\""
                                                ]
                                            },
                                            {
                                                "id": 18,
                                                "op": "constant_tuple",
                                                "output_type": [
                                                    {
                                                        "type": "long"
                                                    }
                                                ],
                                                "predecessors": [],
                                                "values": [
                                                    "static_cast<long>(   runtime::operators::process_worker_id())"
                                                ]
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "op": 11,
                                                "port": 0
                                            }
                                        ]
                                    },
                                    "num_inputs": 2,
                                    "op": "pipeline",
                                    "output_type": [
                                        {
                                            "type": "std::string"
                                        },
                                        {
                                            "type": "long"
                                        },
                                        {
                                            "type": "long"
                                        },
                                        {
                                            "type": "long"
                                        }
                                    ],
                                    "predecessors": [
                                        {
                                            "op": 1,
                                            "port": 0
                                        },
                                        {
                                            "op": 2,
                                            "port": 0
                                        }
                                    ]
                                },
                                {
                                    "id": 1,
                                    "op": "parameter_lookup",
                                    "output_type": [
                                        {
                                            "type": "long"
                                        },
                                        {
                                            "type": "long"
                                        },
                                        {
                                            "type": "long"
                                        },
                                        {
                                            "type": "std::string"
                                        }
                                    ],
                                    "predecessors": []
                                },
                                {
                                    "id": 2,
                                    "op": "parameter_lookup",
                                    "output_type": [
                                        {
                                            "type": "long"
                                        },
                                        {
                                            "type": "long"
                                        },
                                        {
                                            "type": "long"
                                        },
                                        {
                                            "type": "std::string"
                                        }
                                    ],
                                    "predecessors": []
                                }
                            ],
                            "outputs": [
                                {
                                    "op": 0,
                                    "port": 0
                                }
                            ]
                        },
                        "op": "concurrent_execute_process",
                        "output_type": [
                            {
                                "type": "std::string"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            }
                        ],
                        "predecessors": [
                            {
                                "op": 9,
                                "port": 0
                            }
                        ]
                    },
                    {
                        "id": 9,
                        "op": "cartesian",
                        "output_type": [
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "std::string"
                            }
                        ],
                        "predecessors": [
                            {
                                "op": 10,
                                "port": 0
                            },
                            {
                                "op": 0,
                                "port": 0
                            }
                        ]
                    },
                    {
                        "id": 10,
                        "num_inputs": 1,
                        "op": "zip",
                        "output_type": [
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            }
                        ],
                        "predecessors": [
                            {
                                "op": 11,
                                "port": 0
                            }
                        ]
                    },
                    {
                        "id": 11,
                        "op": "split_range",
                        "output_type": [
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            }
                        ],
                        "predecessors": [
                            {
                                "op": 12,
                                "port": 0
                            },
                            {
                                "op": 13,
                                "port": 0
                            }
                        ]
                    },
                    {
                        "id": 12,
                        "op": "parameter_lookup",
                        "output_type": [
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            },
                            {
                                "type": "long"
                            }
                        ],
                        "predecessors": []
                    },
                    {
                        "id": 13,
                        "op": "constant_tuple",
                        "output_type": [
                            {
                                "type": "long"
                            }
                        ],
                        "predecessors": [],
                        "values": [
                            "static_cast<long>(   runtime::operators::process_num_workers())"
                        ]
                    },
                    {
                        "id": 14,
                        "op": "parameter_lookup",
                        "output_type": [
                            {
                                "type": "std::string"
                            }
                        ],
                        "predecessors": []
                    }
                ],
                "outputs": [
                    {
                        "op": 1,
                        "port": 0
                    }
                ]
            },
            "num_inputs": 2,
            "op": "pipeline",
            "output_type": [
                {
                    "layout": "C",
                    "num_dimensions": 1,
                    "tuple_type": [
                        {
                            "type": "long"
                        },
                        {
                            "type": "long"
                        },
                        {
                            "type": "long"
                        },
                        {
                            "type": "long"
                        },
                        {
                            "type": "long"
                        },
                        {
                            "type": "long"
                        },
                        {
                            "type": "double"
                        },
                        {
                            "type": "double"
                        },
                        {
                            "type": "double"
                        },
                        {
                            "type": "long"
                        }
                    ],
                    "type": "array"
                }
            ],
            "predecessors": [
                {
                    "op": 1,
                    "port": 0
                },
                {
                    "op": 2,
                    "port": 0
                }
            ]
        },
        {
            "id": 1,
            "op": "parameter_lookup",
            "output_type": [
                {
                    "type": "long"
                },
                {
                    "type": "long"
                },
                {
                    "type": "long"
                }
            ],
            "predecessors": []
        },
        {
            "id": 2,
            "op": "parameter_lookup",
            "output_type": [
                {
                    "type": "std::string"
                }
            ],
            "predecessors": []
        }
    ],
    "outputs": [
        {
            "op": 0,
            "port": 0
        }
    ]
}