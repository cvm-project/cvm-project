{
    "dag": [
        {
            "add_index": true,
            "id": 0,
            "op": "collection_source",
            "output_type": "(long, long, long)",
            "predecessors": []
        },
        {
            "add_index": true,
            "id": 1,
            "op": "collection_source",
            "output_type": "(long, long, long)",
            "predecessors": []
        },
        {
            "id": 2,
            "op": "cartesian",
            "output_type": "(long, long, long, long, long, long)",
            "predecessors": [
                0,
                1
            ]
        },
        {
            "func": "define void @cfuncnotuniquename({ { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }* nocapture %.1, i64 %.2, i64 %.3, i64 %.4, i64 %.5, i64 %.6, i64 %.7, i64 %.8, i64 %.9, i64 %.10, i64 %.11) local_unnamed_addr #0 {\nentry:\n  %.1.repack.repack19 = bitcast { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }* %.1 to i64*\n  store i64 %.2, i64* %.1.repack.repack19, align 8\n  %.1.repack.repack13 = getelementptr inbounds { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }, { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }* %.1, i64 0, i32 0, i32 1\n  store i64 %.3, i64* %.1.repack.repack13, align 8\n  %.1.repack.repack15 = getelementptr inbounds { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }, { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }* %.1, i64 0, i32 0, i32 2\n  store i64 %.7, i64* %.1.repack.repack15, align 8\n  %.1.repack.repack17 = getelementptr inbounds { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }, { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }* %.1, i64 0, i32 0, i32 3\n  store i64 %.8, i64* %.1.repack.repack17, align 8\n  %.1.repack1.repack = getelementptr inbounds { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }, { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }* %.1, i64 0, i32 1, i32 0\n  store i64 %.4, i64* %.1.repack1.repack, align 8\n  %.1.repack1.repack3 = getelementptr inbounds { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }, { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }* %.1, i64 0, i32 1, i32 1\n  store i64 %.5, i64* %.1.repack1.repack3, align 8\n  %.1.repack1.repack5 = getelementptr inbounds { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }, { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }* %.1, i64 0, i32 1, i32 2\n  store i64 %.6, i64* %.1.repack1.repack5, align 8\n  %.1.repack1.repack7 = getelementptr inbounds { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }, { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }* %.1, i64 0, i32 1, i32 3\n  store i64 %.9, i64* %.1.repack1.repack7, align 8\n  %.1.repack1.repack9 = getelementptr inbounds { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }, { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }* %.1, i64 0, i32 1, i32 4\n  store i64 %.10, i64* %.1.repack1.repack9, align 8\n  %.1.repack1.repack11 = getelementptr inbounds { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }, { { i64, i64, i64, i64 }, { i64, i64, i64, i64, i64, i64 } }* %.1, i64 0, i32 1, i32 5\n  store i64 %.11, i64* %.1.repack1.repack11, align 8\n  ret void\n}\n\n\n",
            "id": 3,
            "op": "reduce_by_key",
            "output_type": "(long, long, long, long, long, long)",
            "predecessors": [
                2
            ]
        }
    ]
}
